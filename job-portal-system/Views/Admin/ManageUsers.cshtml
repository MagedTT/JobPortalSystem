@{
    ViewData["Title"] = "Manage Users";
}

<div class="container mt-5">
    <h2 class="fw-semibold mb-4 d-flex align-items-center gap-3">
        <i class="bi bi-people text-primary" style="font-size:2.5rem;"></i>
        <span>Manage Users</span>
    </h2>

    <div class="card p-4 rounded-4 shadow-lg bg-dark text-light">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h4 class="mb-0">All Users</h4>
            <div class="d-flex gap-2">
                <select class="form-select" id="roleFilter" style="max-width: 200px;" onchange="loadUsers()">
                    <option value="">All Roles</option>
                    <option value="Admin">Admin</option>
                    <option value="Employer">Employer</option>
                    <option value="JobSeeker">Job Seeker</option>
                </select>
                <input type="text" id="searchUsers" class="form-control" placeholder="Search users..." style="max-width: 300px;">
                <button class="btn btn-outline-info" onclick="loadUsers()">
                    <i class="bi bi-arrow-clockwise"></i> Refresh
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-dark table-hover table-bordered admin-table rounded-3">
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Status</th>
                        <th>Registered Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="usersTableBody">
                    <tr>
                        <td colspan="6" class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <nav class="mt-3">
            <ul class="pagination justify-content-center" id="pagination">
            </ul>
        </nav>
    </div>
</div>

<!-- User Details Modal -->
<div class="modal fade" id="userDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content bg-dark text-light">
            <div class="modal-header">
                <h5 class="modal-title">User Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="userDetailsBody">
                <!-- User details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;

        async function loadUsers(page = 1) {
            currentPage = page;
            const searchTerm = document.getElementById('searchUsers').value;
            const roleFilter = document.getElementById('roleFilter').value;
            
            try {
                // Placeholder: Replace with actual API call
                const users = [
                    {
                        id: '1',
                        username: 'admin@jobverse.com',
                        email: 'admin@jobverse.com',
                        role: 'Admin',
                        isActive: true,
                        registeredDate: '2024-01-01'
                    },
                    {
                        id: '2',
                        username: 'employer1@jobverse.com',
                        email: 'employer1@jobverse.com',
                        role: 'Employer',
                        isActive: true,
                        registeredDate: '2024-01-05'
                    },
                    {
                        id: '3',
                        username: 'jobseeker1@jobverse.com',
                        email: 'jobseeker1@jobverse.com',
                        role: 'JobSeeker',
                        isActive: false,
                        registeredDate: '2024-01-10'
                    }
                ];

                renderUsers(users);
                renderPagination(30); // Total count placeholder
            } catch (error) {
                console.error('Error loading users:', error);
            }
        }

        function renderUsers(users) {
            const tbody = document.getElementById('usersTableBody');
            
            if (users.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center">No users found</td></tr>';
                return;
            }

            tbody.innerHTML = users.map(user => `
                <tr>
                    <td>${user.username}</td>
                    <td>${user.email}</td>
                    <td>
                        <span class="badge bg-info">${user.role}</span>
                    </td>
                    <td>
                        <span class="badge ${user.isActive ? 'bg-success' : 'bg-secondary'}">
                            ${user.isActive ? 'Active' : 'Inactive'}
                        </span>
                    </td>
                    <td>${new Date(user.registeredDate).toLocaleDateString()}</td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <button onclick="viewUserDetails('${user.id}')" class="btn btn-info">
                                <i class="bi bi-eye"></i>
                            </button>
                            <button onclick="toggleUserStatus('${user.id}')" class="btn btn-warning">
                                <i class="bi bi-toggle-on"></i>
                            </button>
                            <button onclick="deleteUser('${user.id}')" class="btn btn-danger">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        function renderPagination(totalCount) {
            const totalPages = Math.ceil(totalCount / pageSize);
            const pagination = document.getElementById('pagination');
            
            let html = '';
            
            // Previous
            html += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadUsers(${currentPage - 1}); return false;">Previous</a>
            </li>`;
            
            // Pages
            for (let i = 1; i <= totalPages; i++) {
                html += `<li class="page-item ${currentPage === i ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadUsers(${i}); return false;">${i}</a>
                </li>`;
            }
            
            // Next
            html += `<li class="page-item ${currentPage >= totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadUsers(${currentPage + 1}); return false;">Next</a>
            </li>`;
            
            pagination.innerHTML = html;
        }

        function viewUserDetails(id) {
            // Placeholder: Load user details via API
            const modal = new bootstrap.Modal(document.getElementById('userDetailsModal'));
            document.getElementById('userDetailsBody').innerHTML = `
                <div class="row g-3">
                    <div class="col-md-6">
                        <strong>Username:</strong> user@example.com
                    </div>
                    <div class="col-md-6">
                        <strong>Email:</strong> user@example.com
                    </div>
                    <div class="col-md-6">
                        <strong>Role:</strong> <span class="badge bg-info">JobSeeker</span>
                    </div>
                    <div class="col-md-6">
                        <strong>Status:</strong> <span class="badge bg-success">Active</span>
                    </div>
                    <div class="col-12">
                        <strong>Registered:</strong> January 15, 2024
                    </div>
                </div>
            `;
            modal.show();
        }

        function toggleUserStatus(id) {
            if (confirm('Toggle user status?')) {
                // Placeholder: Add API call
                alert('User status toggled');
                loadUsers(currentPage);
            }
        }

        function deleteUser(id) {
            if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
                // Placeholder: Add API call
                alert('User deleted');
                loadUsers(currentPage);
            }
        }

        // Search functionality
        document.getElementById('searchUsers').addEventListener('input', debounce(() => {
            loadUsers(1);
        }, 500));

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Load users on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadUsers();
        });
    </script>
}
