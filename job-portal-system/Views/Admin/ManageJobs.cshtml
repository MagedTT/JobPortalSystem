@{
    ViewData["Title"] = "Manage Jobs";
}

<div class="container mt-5">
    <h2 class="fw-semibold mb-4 d-flex align-items-center gap-3">
        <i class="bi bi-briefcase text-primary" style="font-size:2.5rem;"></i>
        <span>Manage Jobs</span>
    </h2>

    <div class="card p-4 rounded-4 shadow-lg bg-dark text-light">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h4 class="mb-0">All Jobs</h4>
            <div class="d-flex gap-2">
                <input type="text" id="searchJobs" class="form-control" placeholder="Search jobs..." style="max-width: 300px;">
                <button class="btn btn-outline-info" onclick="loadJobs()">
                    <i class="bi bi-arrow-clockwise"></i> Refresh
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-dark table-hover table-bordered admin-table rounded-3">
                <thead>
                    <tr>
                        <th>Job Title</th>
                        <th>Company</th>
                        <th>Location</th>
                        <th>Posted Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="jobsTableBody">
                    <tr>
                        <td colspan="6" class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <nav class="mt-3">
            <ul class="pagination justify-content-center" id="pagination">
            </ul>
        </nav>
    </div>
</div>

@@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;

        async function loadJobs(page = 1) {
            currentPage = page;
            const searchTerm = document.getElementById('searchJobs').value;
            
            try {
                // Placeholder: Replace with actual API call
                const jobs = [
                    {
                        id: '1',
                        title: 'Senior Developer',
                        company: 'Tech Corp',
                        location: 'Cairo',
                        postedDate: '2024-01-15',
                        isActive: true
                    },
                    {
                        id: '2',
                        title: 'Marketing Manager',
                        company: 'Marketing Inc',
                        location: 'Alexandria',
                        postedDate: '2024-01-10',
                        isActive: false
                    }
                ];

                renderJobs(jobs);
                renderPagination(20); // Total count placeholder
            } catch (error) {
                console.error('Error loading jobs:', error);
            }
        }

        function renderJobs(jobs) {
            const tbody = document.getElementById('jobsTableBody');
            
            if (jobs.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center">No jobs found</td></tr>';
                return;
            }

            tbody.innerHTML = jobs.map(job => `
                <tr>
                    <td>${job.title}</td>
                    <td>${job.company}</td>
                    <td>${job.location}</td>
                    <td>${new Date(job.postedDate).toLocaleDateString()}</td>
                    <td>
                        <span class="badge ${job.isActive ? 'bg-success' : 'bg-secondary'}">
                            ${job.isActive ? 'Active' : 'Inactive'}
                        </span>
                    </td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <a href="/Job/Details/${job.id}" class="btn btn-info">
                                <i class="bi bi-eye"></i>
                            </a>
                            <button onclick="toggleJobStatus('${job.id}')" class="btn btn-warning">
                                <i class="bi bi-toggle-on"></i>
                            </button>
                            <button onclick="deleteJob('${job.id}')" class="btn btn-danger">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        function renderPagination(totalCount) {
            const totalPages = Math.ceil(totalCount / pageSize);
            const pagination = document.getElementById('pagination');
            
            let html = '';
            
            // Previous
            html += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadJobs(${currentPage - 1}); return false;">Previous</a>
            </li>`;
            
            // Pages
            for (let i = 1; i <= totalPages; i++) {
                html += `<li class="page-item ${currentPage === i ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadJobs(${i}); return false;">${i}</a>
                </li>`;
            }
            
            // Next
            html += `<li class="page-item ${currentPage >= totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadJobs(${currentPage + 1}); return false;">Next</a>
            </li>`;
            
            pagination.innerHTML = html;
        }

        function toggleJobStatus(id) {
            if (confirm('Toggle job status?')) {
                // Placeholder: Add API call
                alert('Job status toggled');
                loadJobs(currentPage);
            }
        }

        function deleteJob(id) {
            if (confirm('Are you sure you want to delete this job?')) {
                // Placeholder: Add API call
                alert('Job deleted');
                loadJobs(currentPage);
            }
        }

        // Search functionality
        document.getElementById('searchJobs').addEventListener('input', debounce(() => {
            loadJobs(1);
        }, 500));

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Load jobs on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadJobs();
        });
    </script>
}
