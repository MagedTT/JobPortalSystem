@using Microsoft.AspNetCore.Identity
@using job_portal_system.Models.Domain
@using job_portal_system.Data
@using Microsoft.EntityFrameworkCore
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject ApplicationDbContext context

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Job Portal</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

    <link href="~/css/base.css" rel="stylesheet" />
    <link href="~/css/themes.css" rel="stylesheet" />
    <link href="~/css/layout.css" rel="stylesheet" />
    <link href="~/css/components.css" rel="stylesheet" />
    <link href="~/css/admin.css" rel="stylesheet" />
    <link href="~/css/home-landing.css" rel="stylesheet" />
    <link href="~/css/modal.css" rel="stylesheet" />
    <link href="~/css/breadcrumb.css" rel="stylesheet" />
    <link href="~/css/toggle-buttons.css" rel="stylesheet" />

    <!-- Load theme switcher IMMEDIATELY in head to prevent flash -->
    <script src="~/js/theme-switcher.js"></script>

</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark fixed-top" style="background-color:#0d1117; border-bottom:1px solid #21262d;">
            <div class="container-fluid px-5">
                <!-- Left: Logo -->
                    <a class="navbar-brand d-flex align-items-center gap-2" asp-controller="Home" asp-action="Index">
                        <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 64 64" role="img" aria-labelledby="jobverseTitle jobverseDesc">
                          <title id="jobverseTitle">Jobverse</title>
                          <desc id="jobverseDesc">Logo: a planet with an orbit and a briefcase inside, gradient green</desc>

                          <defs>
                            <linearGradient id="g1" x1="0" x2="1" y1="0" y2="1">
                              <stop offset="0" stop-color="#238636"/>
                              <stop offset="1" stop-color="#2ea043"/>
                            </linearGradient>
                            <filter id="f1" x="-20%" y="-20%" width="140%" height="140%">
                              <feDropShadow dx="0" dy="1" stdDeviation="2" flood-color="#000" flood-opacity="0.25"/>
                            </filter>
                          </defs>

                          <circle cx="32" cy="32" r="20" fill="url(#g1)" opacity="0.12"/>

                          <circle cx="32" cy="32" r="16" fill="url(#g1)" filter="url(#f1)"/>

                          <ellipse cx="32" cy="32" rx="22" ry="9" fill="none" stroke="#99f6b6" stroke-opacity="0.18" stroke-width="2" transform="rotate(-24 32 32)"/>

                          <g transform="translate(0,0)">
                            <rect x="22" y="28" width="20" height="10" rx="1.6" ry="1.6" fill="#0b1220" opacity="0.18"/>
                            <rect x="22.8" y="28.6" width="18.4" height="9.2" rx="1.2" ry="1.2" fill="#ffffff" opacity="0.08"/>

                            <rect x="23.6" y="27.8" width="16.8" height="8.4" rx="1.2" ry="1.2" fill="none" stroke="url(#g1)" stroke-width="1.6"/>

                            <path d="M27.2 26.4 h9.6 a1.2 1.2 0 0 1 1.2 1.2 v0.4" fill="none" stroke="url(#g1)" stroke-width="1.6" stroke-linecap="round"/>

                            <rect x="30.6" y="30.6" width="2.8" height="3.2" rx="0.6" fill="url(#g1)"/>
                          </g>

                          <g transform="translate(13,14)" fill="#f8f9fa" opacity="0.95">
                            <path d="M2 0 L2.6 1.8 L4.6 2.2 L2.6 2.6 L2 4.4 L1.4 2.6 L-0.6 2.2 L1.4 1.8 Z" transform="scale(1.6)"/>
                          </g>

                          <circle cx="48.5" cy="18.5" r="0.9" fill="#c8f0d0" opacity="0.9"/>
                          <circle cx="50.8" cy="30.2" r="0.6" fill="#e6ffef" opacity="0.8"/>
                        </svg>
                        <span class="fw-semibold text-light">Jobverse</span>
                    </a>

                <!-- Toggler -->
                <button class="navbar-toggler border-0" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav">
                    <i class="bi bi-list text-light fs-3"></i>
                </button>

                <!-- Middle + Right -->
                <div class="collapse navbar-collapse" id="mainNav">
                    <!-- Middle: Links - Role-based tabs -->
                    <ul class="navbar-nav ms-3 me-auto d-flex align-items-center gap-1">
                        @if (User.IsInRole("Admin"))
                        {
                            <!-- Admin Tabs -->
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "Dashboard" && ViewContext.RouteData.Values["controller"]?.ToString() == "Admin" ? "active" : "")" asp-controller="Admin" asp-action="Dashboard">
                                    <i class="bi bi-speedometer2"></i> Dashboard
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "ManageUsers" ? "active" : "")" asp-controller="Admin" asp-action="ManageUsers">
                                    <i class="bi bi-people"></i> Users
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "PendingEmployers" ? "active" : "")" asp-controller="Admin" asp-action="PendingEmployers">
                                    <i class="bi bi-building"></i> Employers
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "ManageJobs" ? "active" : "")" asp-controller="Admin" asp-action="ManageJobs">
                                    <i class="bi bi-briefcase"></i> Jobs
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["controller"]?.ToString() == "AdminContact" ? "active" : "")" asp-controller="AdminContact" asp-action="Messages">
                                    <i class="bi bi-envelope"></i> Contact
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "Reports" ? "active" : "")" asp-controller="Admin" asp-action="Reports">
                                    <i class="bi bi-bar-chart"></i> Reports
                                </a>
                            </li>
                        }
                        else if (User.IsInRole("Employer"))
                        {
                            <!-- Employer Tabs -->
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "Dashboard" && ViewContext.RouteData.Values["controller"]?.ToString() == "Employer" ? "active" : "")" asp-controller="Employer" asp-action="Dashboard">
                                    <i class="bi bi-speedometer2"></i> Dashboard
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "Applicants" ? "active" : "")" asp-controller="Employer" asp-action="Applicants">
                                    <i class="bi bi-people"></i> Applicants
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "ManageJobs" ? "active" : "")" asp-controller="Job" asp-action="ManageJobs">
                                    <i class="bi bi-briefcase"></i> My Jobs
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["action"]?.ToString() == "Create" && ViewContext.RouteData.Values["controller"]?.ToString() == "Job" ? "active" : "")" asp-controller="Job" asp-action="Create">
                                    <i class="bi bi-plus-circle"></i> Post Job
                                </a>
                            </li>
                        }
                        else
                        {
                            <!-- JobSeeker/Guest Tabs -->
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")" asp-controller="Home" asp-action="Index">
                                    <i class="bi bi-house"></i> Home
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Job" ? "active" : "")" asp-controller="Job" asp-action="Index">
                                    <i class="bi bi-briefcase"></i> Jobs
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Companies" ? "active" : "")" asp-controller="Companies" asp-action="Index">
                                    <i class="bi bi-buildings"></i> Companies
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link px-3 d-flex align-items-center gap-1 @(ViewContext.RouteData.Values["controller"]?.ToString() == "Contact" ? "active" : "")" asp-controller="Contact" asp-action="Index">
                                    <i class="bi bi-envelope"></i> Contact
                                </a>
                            </li>
                        }
                    </ul>

                    <!-- Right: Actions -->
                    <div class="d-flex align-items-center gap-3">
                        <!-- Language Toggle Button -->
                        @* <button id="languageToggle" class="theme-toggle" onclick="toggleLanguage()" title="Toggle Language">
                            <i class="bi bi-translate"></i>
                            <span>Arabic</span>
                        </button> *@

                        <!-- Theme Toggle Button -->
                        @* <button id="themeToggle" class="theme-toggle" onclick="toggleTheme()" title="Toggle Theme">
                            <i class="bi bi-sun-fill"></i>
                            <span>Light</span>
                        </button> *@

                        @if (SignInManager.IsSignedIn(User))
                        {
                            var currentUser = await UserManager.GetUserAsync(User);
                            
                            if (currentUser != null)
                            {
                                string displayName = currentUser.UserName ?? "User";
                                string? imagePath = null;
                                
                                // Try to get JobSeeker or Employer name and image
                                if (User.IsInRole("JobSeeker"))
                                {
                                    var jobSeeker = await context.JobSeekers.FirstOrDefaultAsync(js => js.UserId == currentUser.Id);
                                    if (jobSeeker != null)
                                    {
                                        displayName = $"{jobSeeker.FirstName} {jobSeeker.LastName}".Trim();
                                        if (string.IsNullOrWhiteSpace(displayName))
                                        {
                                            displayName = currentUser.UserName ?? "User";
                                        }
                                        imagePath = jobSeeker.ImagePath;
                                    }
                                }
                                else if (User.IsInRole("Employer"))
                                {
                                    var employer = await context.Employers.FirstOrDefaultAsync(e => e.UserId == currentUser.Id);
                                    if (employer != null && !string.IsNullOrEmpty(employer.CompanyName))
                                    {
                                        displayName = employer.CompanyName;
                                        imagePath = employer.LogoPath;
                                    }
                                }

                                <div class="dropdown">
                                    <a class="nav-link dropdown-toggle d-flex align-items-center gap-2 text-light"
                                       href="#" id="userMenu" data-bs-toggle="dropdown" style="cursor:pointer;">
                                        @if (!string.IsNullOrEmpty(imagePath))
                                        {
                                            <img src="@imagePath" alt="Profile" style="width: 32px; height: 32px; border-radius: 50%; object-fit: cover; border: 2px solid #2ea043;" />
                                        }
                                        else
                                        {
                                            <i class="bi bi-person-circle fs-5"></i>
                                        }
                                        <span>@displayName</span>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-end shadow-sm">
                                        <li><a class="dropdown-item" asp-controller="Account" asp-action="Profile"><i class="bi bi-person"></i> Profile</a></li>
                                        @if (User.IsInRole("JobSeeker"))
                                        {
                                            <li><a class="dropdown-item" asp-controller="Application" asp-action="MyApplications"><i class="bi bi-file-earmark-text"></i> My Applications</a></li>
                                            <li><a class="dropdown-item" asp-controller="Messages" asp-action="Inbox"><i class="bi bi-envelope"></i> Messages</a></li>
                                        }
                                        @if (User.IsInRole("Employer"))
                                        {
                                            <li><a class="dropdown-item" asp-controller="Messages" asp-action="Inbox"><i class="bi bi-envelope"></i> Messages</a></li>
                                        }
                                        <li><a class="dropdown-item" asp-controller="Account" asp-action="Security"><i class="bi bi-shield-check"></i> Security</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" asp-controller="Account" asp-action="Logout"><i class="bi bi-box-arrow-right"></i> Logout</a></li>
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <!-- Fallback if user is signed in but user object is null -->
                                <a asp-controller="Account" asp-action="Logout"
                                   class="btn btn-sm btn-outline-light d-flex align-items-center gap-1">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </a>
                            }
                        }
                        else
                        {
                            <a asp-controller="Account" asp-action="Register"
                               class="btn btn-sm btn-outline-light d-flex align-items-center gap-1">
                                <i class="bi bi-person-plus"></i> Register
                            </a>
                            <a asp-controller="Account" asp-action="Login"
                               class="btn btn-sm btn-primary d-flex align-items-center gap-1">
                                <i class="bi bi-box-arrow-in-right"></i> Login
                            </a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <main class="@(ViewData["FullWidth"]?.ToString() == "true" ? "" : "fluid-container mt-3")">
        @if (ViewData["HideBreadcrumb"]?.ToString() != "true")
        {
            <div class="container-fluid px-4 pt-3">
                @await Component.InvokeAsync("Breadcrumb")
            </div>
        }
        @RenderBody()
    </main>

    <footer class="py-3 text-center mt-auto">
        <span>© @DateTime.Now.Year Job Portal System  <span class="text-secondary">Designed with</span> <i class="bi bi-heart-fill text-danger"></i></span>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Language toggle function
        function toggleLanguage() {
            const languageToggle = document.getElementById('languageToggle');
            const currentLang = localStorage.getItem('language') || 'en';
            const newLang = currentLang === 'en' ? 'ar' : 'en';
            
            // Update button text and icon
            const span = languageToggle.querySelector('span');
            if (newLang === 'ar') {
                span.textContent = 'English';
                document.documentElement.setAttribute('dir', 'rtl');
                document.documentElement.setAttribute('lang', 'ar');
            } else {
                span.textContent = 'عربي';
                document.documentElement.setAttribute('dir', 'ltr');
                document.documentElement.setAttribute('lang', 'en');
            }
            
            // Save preference
            localStorage.setItem('language', newLang);
        }

        // Initialize language on page load
        function initLanguage() {
            const savedLang = localStorage.getItem('language') || 'en';
            const languageToggle = document.getElementById('languageToggle');
            
            if (languageToggle) {
                const span = languageToggle.querySelector('span');
                if (savedLang === 'ar') {
                    span.textContent = 'English';
                    document.documentElement.setAttribute('dir', 'rtl');
                    document.documentElement.setAttribute('lang', 'ar');
                } else {
                    span.textContent = 'عربي';
                    document.documentElement.setAttribute('dir', 'ltr');
                    document.documentElement.setAttribute('lang', 'en');
                }
            }
        }

        // Initialize language when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initLanguage);
        } else {
            initLanguage();
        }
    </script>
    
    <script>
        // Initialize tooltips
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        tooltipTriggerList.forEach(el => new bootstrap.Tooltip(el));
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>